---
name: Continuous Integration
on:
  workflow_call:
    inputs:
      root_module_folder_relative_path:
        description: 'Root Module Folder Relative Path'
        default: '.'
        type: string
      azure_tenant_id:
        description: 'Azure Tenant ID'
        type: string
      azure_subscription_id:
        description: 'Azure Subscription ID'
        type: string
      azure_client_id_plan:
        description: 'Azure Client ID for Plan'
        type: string
      backend_azure_resource_group_name:
        description: 'Azure Resource Group Name for Backend'
        type: string
      backend_azure_storage_account_name:
        description: 'Azure Storage Account Name for Backend'
        type: string
      backend_azure_storage_account_container_name:
        description: 'Azure Storage Account Container Name for Backend'
        type: string

jobs:
  validate:
    name: Validate Terraform
    runs-on:
      ${runner_name}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Format Check
        run: |
          terraform \
          -chdir="$${{inputs.root_module_folder_relative_path}}" \
          fmt \
          -check

      - name: Terraform Init
        run: |
          terraform \
          -chdir="$${{inputs.root_module_folder_relative_path}}" \
          init \
          -backend=false

      - name: Terraform Validate
        run: |
          terraform \
          -chdir="$${{inputs.root_module_folder_relative_path}}" \
          validate

  plan:
    name: Validate Terraform Plan
    needs: validate
    runs-on:
      ${runner_name}
    concurrency: "$${{inputs.backend_azure_storage_account_name}}-$${{inputs.backend_azure_storage_account_container_name}}"
    permissions:
      # NOTE: When modifying the token subject claims and adding `environment`.
      # If the `id-token` permission is granted at the workflow level
      # and the workflow has at least one job that does not specify an environment
      # then the action will fail with an internal error.
      id-token: write
      contents: read
      pull-requests: write
    env:
      ARM_CLIENT_ID: "$${{ inputs.azure_client_id_plan }}"
      ARM_SUBSCRIPTION_ID: "$${{ inputs.azure_subscription_id }}"
      ARM_TENANT_ID: "$${{ inputs.azure_tenant_id }}"
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          terraform \
          -chdir="$${{inputs.root_module_folder_relative_path}}" \
          init \
          -backend-config="resource_group_name=$${{inputs.backend_azure_resource_group_name}}" \
          -backend-config="storage_account_name=$${{inputs.backend_azure_storage_account_name}}" \
          -backend-config="container_name=$${{inputs.backend_azure_storage_account_container_name}}" \
          -backend-config="key=terraform.tfstate"

      - name: Terraform Plan
        id: plan
        run: |
          terraform \
          -chdir="$${{inputs.root_module_folder_relative_path}}" \
          plan \
          -input=false

      - name: Update Pull Request
        if: (success() || failure()) && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: $${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`$${{ steps.plan.outcome }}\`

            <details><summary>Run details</summary>

            The plan was a $${{ steps.plan.outcome }} see the action for more details.

            </details>

            *Pushed by: @$${{ github.actor }}, Action: \`$${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
